// Generated by jextract

package org.unix;

import java.lang.invoke.MethodHandle;
import java.lang.invoke.VarHandle;
import java.nio.ByteOrder;
import java.lang.foreign.*;
import static java.lang.foreign.ValueLayout.*;
/**
 * {@snippet :
 * struct termios {
 *     unsigned int c_iflag;
 *     unsigned int c_oflag;
 *     unsigned int c_cflag;
 *     unsigned int c_lflag;
 *     unsigned char c_line;
 *     unsigned char c_cc[32];
 *     unsigned int c_ispeed;
 *     unsigned int c_ospeed;
 * };
 * }
 */
public class termios {

    public static MemoryLayout $LAYOUT() {
        return constants$5.const$0;
    }
    public static VarHandle c_iflag$VH() {
        return constants$5.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int c_iflag;
     * }
     */
    public static int c_iflag$get(MemorySegment seg) {
        return (int)constants$5.const$1.get(seg, 0L);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int c_iflag;
     * }
     */
    public static void c_iflag$set(MemorySegment seg, int x) {
        constants$5.const$1.set(seg, 0L, x);
    }
    public static int c_iflag$get(MemorySegment seg, long index) {
        return (int)constants$5.const$1.get(seg, index * sizeof());    }
    public static void c_iflag$set(MemorySegment seg, long index, int x) {
        constants$5.const$1.set(seg, index * sizeof(), x);
    }
    public static VarHandle c_oflag$VH() {
        return constants$5.const$2;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int c_oflag;
     * }
     */
    public static int c_oflag$get(MemorySegment seg) {
        return (int)constants$5.const$2.get(seg, 0L);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int c_oflag;
     * }
     */
    public static void c_oflag$set(MemorySegment seg, int x) {
        constants$5.const$2.set(seg, 0L, x);
    }
    public static int c_oflag$get(MemorySegment seg, long index) {
        return (int)constants$5.const$2.get(seg, index * sizeof());    }
    public static void c_oflag$set(MemorySegment seg, long index, int x) {
        constants$5.const$2.set(seg, index * sizeof(), x);
    }
    public static VarHandle c_cflag$VH() {
        return constants$5.const$3;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int c_cflag;
     * }
     */
    public static int c_cflag$get(MemorySegment seg) {
        return (int)constants$5.const$3.get(seg, 0L);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int c_cflag;
     * }
     */
    public static void c_cflag$set(MemorySegment seg, int x) {
        constants$5.const$3.set(seg, 0L, x);
    }
    public static int c_cflag$get(MemorySegment seg, long index) {
        return (int)constants$5.const$3.get(seg, index * sizeof());    }
    public static void c_cflag$set(MemorySegment seg, long index, int x) {
        constants$5.const$3.set(seg, index * sizeof(), x);
    }
    public static VarHandle c_lflag$VH() {
        return constants$5.const$4;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int c_lflag;
     * }
     */
    public static int c_lflag$get(MemorySegment seg) {
        return (int)constants$5.const$4.get(seg, 0L);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int c_lflag;
     * }
     */
    public static void c_lflag$set(MemorySegment seg, int x) {
        constants$5.const$4.set(seg, 0L, x);
    }
    public static int c_lflag$get(MemorySegment seg, long index) {
        return (int)constants$5.const$4.get(seg, index * sizeof());    }
    public static void c_lflag$set(MemorySegment seg, long index, int x) {
        constants$5.const$4.set(seg, index * sizeof(), x);
    }
    public static VarHandle c_line$VH() {
        return constants$5.const$5;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned char c_line;
     * }
     */
    public static byte c_line$get(MemorySegment seg) {
        return (byte)constants$5.const$5.get(seg, 0L);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned char c_line;
     * }
     */
    public static void c_line$set(MemorySegment seg, byte x) {
        constants$5.const$5.set(seg, 0L, x);
    }
    public static byte c_line$get(MemorySegment seg, long index) {
        return (byte)constants$5.const$5.get(seg, index * sizeof());    }
    public static void c_line$set(MemorySegment seg, long index, byte x) {
        constants$5.const$5.set(seg, index * sizeof(), x);
    }
    public static MemorySegment c_cc$slice(MemorySegment seg) {
        return seg.asSlice(17, 32);
    }
    public static VarHandle c_ispeed$VH() {
        return constants$6.const$0;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int c_ispeed;
     * }
     */
    public static int c_ispeed$get(MemorySegment seg) {
        return (int)constants$6.const$0.get(seg, 0L);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int c_ispeed;
     * }
     */
    public static void c_ispeed$set(MemorySegment seg, int x) {
        constants$6.const$0.set(seg, 0L, x);
    }
    public static int c_ispeed$get(MemorySegment seg, long index) {
        return (int)constants$6.const$0.get(seg, index * sizeof());    }
    public static void c_ispeed$set(MemorySegment seg, long index, int x) {
        constants$6.const$0.set(seg, index * sizeof(), x);
    }
    public static VarHandle c_ospeed$VH() {
        return constants$6.const$1;
    }
    /**
     * Getter for field:
     * {@snippet :
     * unsigned int c_ospeed;
     * }
     */
    public static int c_ospeed$get(MemorySegment seg) {
        return (int)constants$6.const$1.get(seg, 0L);
    }
    /**
     * Setter for field:
     * {@snippet :
     * unsigned int c_ospeed;
     * }
     */
    public static void c_ospeed$set(MemorySegment seg, int x) {
        constants$6.const$1.set(seg, 0L, x);
    }
    public static int c_ospeed$get(MemorySegment seg, long index) {
        return (int)constants$6.const$1.get(seg, index * sizeof());    }
    public static void c_ospeed$set(MemorySegment seg, long index, int x) {
        constants$6.const$1.set(seg, index * sizeof(), x);
    }
    public static long sizeof() { return $LAYOUT().byteSize(); }
    public static MemorySegment allocate(SegmentAllocator allocator) { return allocator.allocate($LAYOUT()); }
    public static MemorySegment allocateArray(long len, SegmentAllocator allocator) {
        return allocator.allocate(MemoryLayout.sequenceLayout(len, $LAYOUT()));
    }
    public static MemorySegment ofAddress(MemorySegment addr, Arena scope) { return RuntimeHelper.asArray(addr, $LAYOUT(), 1, scope); }
}


